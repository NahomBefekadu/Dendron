{"pageProps":{"note":{"id":"44QhIoUX7GY2HdS8iX0tJ","title":"cycle-length","desc":"","updated":1645449723184,"created":1645446950112,"custom":{},"fname":"Problems.linked-lists.cycle-length","type":"note","vault":{"fsPath":"vault"},"contentHash":"9767a20ac6b54b0ce71c97f715600d35","links":[{"type":"wiki","from":{"fname":"Problems.linked-lists.cycle-length","id":"44QhIoUX7GY2HdS8iX0tJ","vaultName":"vault"},"value":"data-structures.linked-list","alias":"data-structures.linked-list","position":{"start":{"line":62,"column":3,"offset":978},"end":{"line":62,"column":34,"offset":1009},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"data-structures.linked-list"}},{"type":"wiki","from":{"fname":"Problems.linked-lists.cycle-length","id":"44QhIoUX7GY2HdS8iX0tJ","vaultName":"vault"},"value":"Problems.linked-lists.cycle","alias":"Problems.linked-lists.cycle","position":{"start":{"line":63,"column":3,"offset":1012},"end":{"line":63,"column":34,"offset":1043},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"Problems.linked-lists.cycle"}},{"from":{"fname":"Problems.linked-lists.cycle-start","vaultName":"vault"},"type":"backlink","position":{"start":{"line":99,"column":3,"offset":2401},"end":{"line":99,"column":41,"offset":2439},"indent":[]},"value":"Problems.linked-lists.cycle-length","alias":"Problems.linked-lists.cycle-length"}],"anchors":{"question":{"type":"header","text":"Question","value":"question","line":8,"column":0,"depth":2},"input":{"type":"header","text":"input:","value":"input","line":12,"column":0,"depth":4},"output":{"type":"header","text":"Output:","value":"output","line":23,"column":0,"depth":4},"solution":{"type":"header","text":"Solution","value":"solution","line":27,"column":0,"depth":2},"javascript":{"type":"header","text":"Javascript","value":"javascript","line":31,"column":0,"depth":4},"java":{"type":"header","text":"Java","value":"java","line":60,"column":0,"depth":4},"concepts":{"type":"header","text":"Concepts","value":"concepts","line":66,"column":0,"depth":2},"patterns":{"type":"header","text":"Patterns","value":"patterns","line":71,"column":0,"depth":2}},"children":[],"parent":"DajGakJvZiZu7osygN4yD","data":{}},"body":"<h1 id=\"cycle-length\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#cycle-length\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>cycle-length</h1>\n<h2 id=\"question\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#question\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Question</h2>\n<p>Given the head of a linked list, return the length of the cycle. If there is no cycle, return null.</p>\n<h4 id=\"input\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#input\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>input:</h4>\n<div class=\"mermaid\">\n  graph LR;\n    1-->3;\n    3-->2;\n    2-->4;\n    4-->3;\n\n</div>\n<h4 id=\"output\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#output\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Output:</h4>\n<p>output:3</p>\n<h2 id=\"solution\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#solution\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Solution</h2>\n<p>To solve this we can use similar approach as the first cycle problem, Once we have reached a point where we have found a cycle, we can call a function which then goes through the list from the point the cycle was found to find the length of our cycle in our list.</p>\n<h4 id=\"javascript\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#javascript\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Javascript</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">lengthCycle</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">head</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> p1 <span class=\"token operator\">=</span> head<span class=\"token punctuation\">,</span>\n    p2 <span class=\"token operator\">=</span> head<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">while</span> <span class=\"token punctuation\">(</span>p2 <span class=\"token operator\">!==</span> <span class=\"token keyword null nil\">null</span> <span class=\"token operator\">&#x26;&#x26;</span> p2<span class=\"token punctuation\">.</span><span class=\"token property-access\">next</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">next</span> <span class=\"token operator\">!==</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    p2 <span class=\"token operator\">=</span> p2<span class=\"token punctuation\">.</span><span class=\"token property-access\">next</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">next</span><span class=\"token punctuation\">;</span>\n    p1 <span class=\"token operator\">=</span> p1<span class=\"token punctuation\">.</span><span class=\"token property-access\">next</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>p1 <span class=\"token operator\">===</span> p2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">return</span> <span class=\"token function\">help</span><span class=\"token punctuation\">(</span>p2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">help</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">p2</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    p1 <span class=\"token operator\">=</span> p2<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">while</span> <span class=\"token punctuation\">(</span>p1 <span class=\"token operator\">!==</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    p1 <span class=\"token operator\">=</span> p1<span class=\"token punctuation\">.</span><span class=\"token property-access\">next</span><span class=\"token punctuation\">;</span>\n    count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>p2 <span class=\"token operator\">===</span> p1<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword control-flow\">return</span> count<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4 id=\"java\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#java\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Java</h4>\n<pre class=\"language-java\"><code class=\"language-java\"></code></pre>\n<h2 id=\"concepts\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#concepts\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Concepts</h2>\n<ul>\n<li><a href=\"/Dendron/notes/DB42sUOqAsy9iqBj9nRsU\">Linked List</a></li>\n<li><a href=\"/Dendron/notes/QhCdJ0pX3xnx20ivBEXHw\">cycle</a></li>\n</ul>\n<h2 id=\"patterns\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#patterns\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Patterns</h2>\n<ul>\n<li>Fast &#x26; Slow Pointers</li>\n</ul>\n<hr>\n<h2 id=\"backlinks\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#backlinks\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Backlinks</h2>\n<ul>\n<li><a href=\"/Dendron/notes/LcXo4RabS7LG9NxJjdbcA\">cycle-start</a></li>\n</ul>","noteIndex":{"id":"vVFnvX3AZLb21JIc7L4gm","title":"Root","desc":"","updated":1641184503497,"created":1640015760017,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"dbe76e060067b9059e208c353b2be0be","links":[],"anchors":{"computer-science-library":{"type":"header","text":"Computer Science Library","value":"computer-science-library","line":8,"column":0,"depth":1}},"children":["Yvra9LpGoPLi4Kk2KKGsK","jL0XOOMd1sy4tgf2SWfg5","rydiHYJbn3JhvGgWrK9Sl","l8rNoqR6OrTiJzqzAsfms","Zd60tpALGBOrNJC2avO70","aVtnDm5TBmQfxOgRoc0m1","gh9HX9yN4MF2djOLFCV3N","BeyqjmB3iu9oewp7hCpqg","PbPnrOhcARThoz7ymnam8"],"parent":null,"data":{},"body":"\n# Computer Science Library\n\nThis is a collection of notes ranging from data structures and problems to specific knowledge of a programming language. It is a stored knowledge of different programming languages and applications for easy retrieval and note keeping.\n\nThis repository will be continually updated and maintained as knowledge base grows and aspects of languages are updated.\n\n![](/assets/images/2022-01-02-23-34-36.png)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":4,"useFMTitle":true,"useNoteTitleForLink":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"assetsPrefix":"/Dendron","siteUrl":"https://nahombefekadu.github.io","copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"Dendron","description":"Personal knowledge space","siteLastModified":true,"gh_edit_branch":"main","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{}},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false}}},"__N_SSG":true}