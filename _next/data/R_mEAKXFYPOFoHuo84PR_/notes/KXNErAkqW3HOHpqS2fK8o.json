{"pageProps":{"note":{"id":"KXNErAkqW3HOHpqS2fK8o","title":"add-lists","desc":"","updated":1645445686605,"created":1644724119080,"custom":{},"fname":"Problems.linked-lists.add-lists","type":"note","vault":{"fsPath":"vault"},"contentHash":"64773a62239b56e10484d37fe3f2564b","links":[{"type":"wiki","from":{"fname":"Problems.linked-lists.add-lists","id":"KXNErAkqW3HOHpqS2fK8o","vaultName":"vault"},"value":"data-structures.linked-list","alias":"data-structures.linked-list","position":{"start":{"line":65,"column":3,"offset":1532},"end":{"line":65,"column":34,"offset":1563},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"data-structures.linked-list"}},{"type":"wiki","from":{"fname":"Problems.linked-lists.add-lists","id":"KXNErAkqW3HOHpqS2fK8o","vaultName":"vault"},"value":"data-structures.linked-list.single-linked-list","alias":"data-structures.linked-list.single-linked-list","position":{"start":{"line":66,"column":3,"offset":1566},"end":{"line":66,"column":53,"offset":1616},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"data-structures.linked-list.single-linked-list"}}],"anchors":{"question":{"type":"header","text":"Question","value":"question","line":8,"column":0,"depth":2},"input":{"type":"header","text":"input:","value":"input","line":12,"column":0,"depth":4},"output":{"type":"header","text":"Output:","value":"output","line":26,"column":0,"depth":4},"solution":{"type":"header","text":"Solution","value":"solution","line":34,"column":0,"depth":2},"javascript":{"type":"header","text":"Javascript","value":"javascript","line":38,"column":0,"depth":4},"java":{"type":"header","text":"Java","value":"java","line":63,"column":0,"depth":4},"concepts":{"type":"header","text":"Concepts","value":"concepts","line":69,"column":0,"depth":2},"patterns":{"type":"header","text":"Patterns","value":"patterns","line":74,"column":0,"depth":2}},"children":[],"parent":"DajGakJvZiZu7osygN4yD","data":{}},"body":"<h1 id=\"add-lists\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#add-lists\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>add-lists</h1>\n<h2 id=\"question\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#question\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Question</h2>\n<p>given two heads of linked list, sum the nodes of the linked lists and return a new linked list representing the sum.</p>\n<h4 id=\"input\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#input\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>input:</h4>\n<div class=\"mermaid\">\n  graph LR;\n    1-->3;\n    3-->2;\n</div>\n<div class=\"mermaid\">\n  graph LR;\n    1-->3;\n    3-->2;\n</div>\n<h4 id=\"output\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#output\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Output:</h4>\n<div class=\"mermaid\">\n  graph LR;\n    2-->6;\n    6-->4;\n</div>\n<h2 id=\"solution\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#solution\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Solution</h2>\n<p>We can solve this by first having two pointers to keep track of the two lists, and creating our new linked list. Once we have everything set up we can iterate through the lists. at each node we will check if the current node is null and assign a temporary variable with 0 or the node value. We can then simply add the two temp variables and our float/carry number. we can then add our new node to the list containing our sum value and iterate through the list with our new carry/float value if there is one.</p>\n<h4 id=\"javascript\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#javascript\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Javascript</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addLists</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">head1<span class=\"token punctuation\">,</span> head2</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// todo</span>\n  <span class=\"token keyword\">var</span> current1 <span class=\"token operator\">=</span> head1<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> current2 <span class=\"token operator\">=</span> head2<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> <span class=\"token maybe-class-name\">Result</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">(</span><span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> <span class=\"token maybe-class-name\">Head</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">Result</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> float <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">while</span> <span class=\"token punctuation\">(</span>current1 <span class=\"token operator\">!==</span> <span class=\"token keyword null nil\">null</span> <span class=\"token operator\">||</span> current2 <span class=\"token operator\">!==</span> <span class=\"token keyword null nil\">null</span> <span class=\"token operator\">||</span> float <span class=\"token operator\">!==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> val1 <span class=\"token operator\">=</span> current1 <span class=\"token operator\">===</span> <span class=\"token keyword null nil\">null</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> current1<span class=\"token punctuation\">.</span><span class=\"token property-access\">val</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> val2 <span class=\"token operator\">=</span> current2 <span class=\"token operator\">===</span> <span class=\"token keyword null nil\">null</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> current2<span class=\"token punctuation\">.</span><span class=\"token property-access\">val</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> temp <span class=\"token operator\">=</span> val1 <span class=\"token operator\">+</span> val2 <span class=\"token operator\">+</span> float<span class=\"token punctuation\">;</span>\n    float <span class=\"token operator\">=</span> temp <span class=\"token operator\">></span> <span class=\"token number\">9</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> remainder <span class=\"token operator\">=</span> temp <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n    <span class=\"token maybe-class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">next</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">(</span>remainder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token maybe-class-name\">Result</span> <span class=\"token operator\">=</span> <span class=\"token maybe-class-name\">Result</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">next</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>current1 <span class=\"token operator\">!==</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span> current1 <span class=\"token operator\">=</span> current1<span class=\"token punctuation\">.</span><span class=\"token property-access\">next</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>current2 <span class=\"token operator\">!==</span> <span class=\"token keyword null nil\">null</span><span class=\"token punctuation\">)</span> current2 <span class=\"token operator\">=</span> current2<span class=\"token punctuation\">.</span><span class=\"token property-access\">next</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token maybe-class-name\">Head</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">next</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4 id=\"java\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#java\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Java</h4>\n<pre class=\"language-java\"><code class=\"language-java\"></code></pre>\n<h2 id=\"concepts\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#concepts\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Concepts</h2>\n<ul>\n<li><a href=\"/Dendron/notes/DB42sUOqAsy9iqBj9nRsU\">Linked List</a></li>\n<li><a href=\"/Dendron/notes/TqhGe3YMK86P6QUFBpdrf\">Single Linked List</a></li>\n</ul>\n<h2 id=\"patterns\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#patterns\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Patterns</h2>\n<ul>\n<li>Two Pointer/Iterator</li>\n</ul>","noteIndex":{"id":"vVFnvX3AZLb21JIc7L4gm","title":"Root","desc":"","updated":1641184503497,"created":1640015760017,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"dbe76e060067b9059e208c353b2be0be","links":[],"anchors":{"computer-science-library":{"type":"header","text":"Computer Science Library","value":"computer-science-library","line":8,"column":0,"depth":1}},"children":["Yvra9LpGoPLi4Kk2KKGsK","jL0XOOMd1sy4tgf2SWfg5","rydiHYJbn3JhvGgWrK9Sl","l8rNoqR6OrTiJzqzAsfms","Zd60tpALGBOrNJC2avO70","aVtnDm5TBmQfxOgRoc0m1","gh9HX9yN4MF2djOLFCV3N","BeyqjmB3iu9oewp7hCpqg","PbPnrOhcARThoz7ymnam8"],"parent":null,"data":{},"body":"\n# Computer Science Library\n\nThis is a collection of notes ranging from data structures and problems to specific knowledge of a programming language. It is a stored knowledge of different programming languages and applications for easy retrieval and note keeping.\n\nThis repository will be continually updated and maintained as knowledge base grows and aspects of languages are updated.\n\n![](/assets/images/2022-01-02-23-34-36.png)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":4,"useFMTitle":true,"useNoteTitleForLink":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"assetsPrefix":"/Dendron","siteUrl":"https://nahombefekadu.github.io","copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"Dendron","description":"Personal knowledge space","siteLastModified":true,"gh_edit_branch":"main","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{}},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false}}},"__N_SSG":true}