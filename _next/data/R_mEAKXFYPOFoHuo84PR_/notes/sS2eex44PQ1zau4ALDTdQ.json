{"pageProps":{"note":{"id":"sS2eex44PQ1zau4ALDTdQ","title":"Shortest Path","desc":"","updated":1644895343391,"created":1643598088638,"custom":{},"fname":"problems.graphs.shortest-path","type":"note","vault":{"fsPath":"vault"},"contentHash":"426413ed7359bf0ba3121d1ab26b417c","links":[{"type":"wiki","from":{"fname":"problems.graphs.shortest-path","id":"sS2eex44PQ1zau4ALDTdQ","vaultName":"vault"},"value":"data-structures.Graphs","alias":"data-structures.Graphs","position":{"start":{"line":87,"column":3,"offset":2141},"end":{"line":87,"column":29,"offset":2167},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"data-structures.Graphs"}},{"type":"wiki","from":{"fname":"problems.graphs.shortest-path","id":"sS2eex44PQ1zau4ALDTdQ","vaultName":"vault"},"value":"data-structures.Graphs.traverse","alias":"data-structures.Graphs.traverse","position":{"start":{"line":88,"column":3,"offset":2170},"end":{"line":88,"column":38,"offset":2205},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"data-structures.Graphs.traverse"}}],"anchors":{"question":{"type":"header","text":"Question","value":"question","line":8,"column":0,"depth":2},"input":{"type":"header","text":"input:","value":"input","line":12,"column":0,"depth":4},"output":{"type":"header","text":"Output:","value":"output","line":24,"column":0,"depth":4},"solution":{"type":"header","text":"Solution","value":"solution","line":28,"column":0,"depth":2},"javascript":{"type":"header","text":"Javascript","value":"javascript","line":49,"column":0,"depth":4},"java":{"type":"header","text":"Java","value":"java","line":85,"column":0,"depth":4},"concepts":{"type":"header","text":"Concepts","value":"concepts","line":91,"column":0,"depth":2},"patterns":{"type":"header","text":"Patterns","value":"patterns","line":96,"column":0,"depth":2}},"children":[],"parent":"HixUbuAbnjKP6JGNYQSZd","data":{}},"body":"<h1 id=\"shortest-path\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#shortest-path\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Shortest Path</h1>\n<h2 id=\"question\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#question\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Question</h2>\n<p>given an edge list and a start/end node return the shortest path in the graph.</p>\n<h4 id=\"input\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#input\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>input:</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> edges <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4 id=\"output\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#output\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Output:</h4>\n<p>path-length=2</p>\n<h2 id=\"solution\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#solution\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Solution</h2>\n<p>For this problem, it first helps to visualize the graph like below.</p>\n<div class=\"mermaid\">\n  graph TD;\n    1---3;\n    3---6;\n    6---4;\n    4---9;\n    9---1;\n</div>\n<p>So if we have our start node be 6 and our end node be 9, we can then count the number of edges between the start and end, if we go through 3 we find that the number of edges is 3, and if we go through 4 our edge length is 2. comparing both we find that our shortest path is 2 and return that.</p>\n<p>So we can implement this simply and fast through a breadth-first traversal. Because if we choose a depth first traversal we would be forced to look through one direction until the end. Which would be inefficient in worst case(aka chosen the wrong direction) if we had a large graph.</p>\n<p>So if we go through breadth-first traversal we will know that the first time we encounter the node will be the shortest path to the given end node.</p>\n<p>When we create our queue for our breadth-first traversal other keeping track our node we would also track the distance from the start node with it.</p>\n<h4 id=\"javascript\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#javascript\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Javascript</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">shortPath</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">edges<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> visited <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> graph <span class=\"token operator\">=</span> <span class=\"token function\">createGraph</span><span class=\"token punctuation\">(</span>edges<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token function\">helper</span><span class=\"token punctuation\">(</span>graph<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">,</span> visited<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">createGraph</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">edges</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> graphs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> items <span class=\"token keyword\">of</span> edges<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> items<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>a <span class=\"token keyword\">in</span> graphs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> graphs<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>b <span class=\"token keyword\">in</span> graphs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> graphs<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    graphs<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    graphs<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword control-flow\">return</span> graphs<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">helper</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">graph<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">,</span> visited</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> queue <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword control-flow\">while</span> <span class=\"token punctuation\">(</span>queue<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>current<span class=\"token punctuation\">,</span> distance<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>neighbor <span class=\"token operator\">===</span> end<span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">return</span> distance<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> neighbor <span class=\"token keyword\">of</span> graph<span class=\"token punctuation\">[</span>current<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>visited<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">has</span><span class=\"token punctuation\">(</span>neighbor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword control-flow\">continue</span><span class=\"token punctuation\">;</span>\n      visited<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">add</span><span class=\"token punctuation\">(</span>neighbor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      queue<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>neighbor<span class=\"token punctuation\">,</span> distance<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword control-flow\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4 id=\"java\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#java\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Java</h4>\n<pre class=\"language-java\"><code class=\"language-java\"></code></pre>\n<h2 id=\"concepts\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#concepts\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Concepts</h2>\n<ul>\n<li><a href=\"/Dendron/notes/0KnFMcqYC3OeDpEnawCaX\">Graphs</a></li>\n<li><a href=\"/Dendron/notes/63ZhGIihw53C7PA2UxsVS\">Traverse</a></li>\n</ul>\n<h2 id=\"patterns\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#patterns\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Patterns</h2>\n<ul>\n<li>BFS</li>\n<li>Set/Map</li>\n</ul>","noteIndex":{"id":"vVFnvX3AZLb21JIc7L4gm","title":"Root","desc":"","updated":1641184503497,"created":1640015760017,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"dbe76e060067b9059e208c353b2be0be","links":[],"anchors":{"computer-science-library":{"type":"header","text":"Computer Science Library","value":"computer-science-library","line":8,"column":0,"depth":1}},"children":["Yvra9LpGoPLi4Kk2KKGsK","jL0XOOMd1sy4tgf2SWfg5","rydiHYJbn3JhvGgWrK9Sl","l8rNoqR6OrTiJzqzAsfms","Zd60tpALGBOrNJC2avO70","aVtnDm5TBmQfxOgRoc0m1","gh9HX9yN4MF2djOLFCV3N","BeyqjmB3iu9oewp7hCpqg","PbPnrOhcARThoz7ymnam8"],"parent":null,"data":{},"body":"\n# Computer Science Library\n\nThis is a collection of notes ranging from data structures and problems to specific knowledge of a programming language. It is a stored knowledge of different programming languages and applications for easy retrieval and note keeping.\n\nThis repository will be continually updated and maintained as knowledge base grows and aspects of languages are updated.\n\n![](/assets/images/2022-01-02-23-34-36.png)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":4,"useFMTitle":true,"useNoteTitleForLink":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"assetsPrefix":"/Dendron","siteUrl":"https://nahombefekadu.github.io","copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"Dendron","description":"Personal knowledge space","siteLastModified":true,"gh_edit_branch":"main","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{}},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false}}},"__N_SSG":true}