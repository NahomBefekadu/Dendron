{"pageProps":{"note":{"id":"Fvlig9pSrEWx8pdT9DYG3","title":"three-sum-closest","desc":"","updated":1645410808622,"created":1645408087709,"custom":{},"fname":"Problems.arrays.three-sum-closest","type":"note","vault":{"fsPath":"vault"},"contentHash":"1d44c7c347e629399deeee4e8a274500","links":[{"type":"wiki","from":{"fname":"Problems.arrays.three-sum-closest","id":"Fvlig9pSrEWx8pdT9DYG3","vaultName":"vault"},"value":"data-structures.arrays","alias":"data-structures.arrays","position":{"start":{"line":63,"column":3,"offset":1640},"end":{"line":63,"column":29,"offset":1666},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"data-structures.arrays"}},{"type":"wiki","from":{"fname":"Problems.arrays.three-sum-closest","id":"Fvlig9pSrEWx8pdT9DYG3","vaultName":"vault"},"value":"Problems.arrays.three-number-sum","alias":"Problems.arrays.three-number-sum","position":{"start":{"line":64,"column":3,"offset":1669},"end":{"line":64,"column":39,"offset":1705},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"Problems.arrays.three-number-sum"}}],"anchors":{"question":{"type":"header","text":"Question","value":"question","line":8,"column":0,"depth":2},"input":{"type":"header","text":"input:","value":"input","line":16,"column":0,"depth":4},"output":{"type":"header","text":"Output:","value":"output","line":20,"column":0,"depth":4},"solution":{"type":"header","text":"Solution","value":"solution","line":24,"column":0,"depth":2},"javascript":{"type":"header","text":"Javascript","value":"javascript","line":31,"column":0,"depth":4},"java":{"type":"header","text":"Java","value":"java","line":61,"column":0,"depth":4},"concepts":{"type":"header","text":"Concepts","value":"concepts","line":67,"column":0,"depth":2},"patterns":{"type":"header","text":"Patterns","value":"patterns","line":72,"column":0,"depth":2}},"children":[],"parent":"PoYULfBHCm7pyx49XPIDw","data":{}},"body":"<h1 id=\"three-sum-closest\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#three-sum-closest\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>three-sum-closest</h1>\n<h2 id=\"question\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#question\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Question</h2>\n<p>Given an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target.</p>\n<p>Return the sum of the three integers.</p>\n<p>You may assume that each input would have exactly one solution.</p>\n<h4 id=\"input\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#input\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>input:</h4>\n<p>Input: nums = [-1,2,1,-4], target = 1</p>\n<h4 id=\"output\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#output\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Output:</h4>\n<p>Output: 2</p>\n<h2 id=\"solution\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#solution\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Solution</h2>\n<p>This is exactly the same as our previous solution for three sum problem, but this time we sill save the sum of each value and return the smallest sum value at the end.\nAs done previously, we will first sort our array, then we will iterate through our array.</p>\n<p>at each current value we go through a while loop to check for possible combinations of values to find the smallest sum value, if we find a combination that is equal to our target sum or it's difference is 0. we can simply return this value. Otherwise for each combination sum we check it with our current smallest value, and save it if it's smaller than our current smallest sum.</p>\n<h4 id=\"javascript\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#javascript\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Javascript</h4>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">threeSumClosest</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">arr<span class=\"token punctuation\">,</span> target_sum</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> smallestSum <span class=\"token operator\">=</span> <span class=\"token number\">Infinity</span><span class=\"token punctuation\">;</span>\n  arr<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token arrow operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword control-flow\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> arr<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> p1 <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> p2 <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span><span class=\"token property-access\">length</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword control-flow\">while</span> <span class=\"token punctuation\">(</span>p1 <span class=\"token operator\">&#x3C;</span> p2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> targetDiff <span class=\"token operator\">=</span> target_sum <span class=\"token operator\">-</span> arr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> arr<span class=\"token punctuation\">[</span>p1<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> arr<span class=\"token punctuation\">[</span>p2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>targetDiff <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">return</span> target_sum<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">abs</span><span class=\"token punctuation\">(</span>targetDiff<span class=\"token punctuation\">)</span> <span class=\"token operator\">&#x3C;</span> <span class=\"token known-class-name class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">abs</span><span class=\"token punctuation\">(</span>smallestSum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        smallestSum <span class=\"token operator\">=</span> targetDiff<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>targetDiff <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        p1<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword control-flow\">else</span> <span class=\"token punctuation\">{</span>\n        p2<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword control-flow\">return</span> target_sum <span class=\"token operator\">-</span> smallestSum<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4 id=\"java\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#java\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Java</h4>\n<pre class=\"language-java\"><code class=\"language-java\"></code></pre>\n<h2 id=\"concepts\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#concepts\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Concepts</h2>\n<ul>\n<li><a href=\"/Dendron/notes/0WlW3iokuTpYX6JNGAQAS\">Arrays</a></li>\n<li><a href=\"/Dendron/notes/r5fLqQ0EGsyeGiKNdQdF1\">three-number-sum</a></li>\n</ul>\n<h2 id=\"patterns\"><a aria-hidden=\"true\" class=\"anchor-heading\" href=\"#patterns\"><svg aria-hidden=\"true\" viewBox=\"0 0 16 16\"><use xlink:href=\"#svg-link\"></use></svg></a>Patterns</h2>\n<ul>\n<li>Two Pointer</li>\n</ul>","noteIndex":{"id":"vVFnvX3AZLb21JIc7L4gm","title":"Root","desc":"","updated":1641184503497,"created":1640015760017,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"dbe76e060067b9059e208c353b2be0be","links":[],"anchors":{"computer-science-library":{"type":"header","text":"Computer Science Library","value":"computer-science-library","line":8,"column":0,"depth":1}},"children":["Yvra9LpGoPLi4Kk2KKGsK","jL0XOOMd1sy4tgf2SWfg5","rydiHYJbn3JhvGgWrK9Sl","l8rNoqR6OrTiJzqzAsfms","Zd60tpALGBOrNJC2avO70","aVtnDm5TBmQfxOgRoc0m1","gh9HX9yN4MF2djOLFCV3N","BeyqjmB3iu9oewp7hCpqg","PbPnrOhcARThoz7ymnam8"],"parent":null,"data":{},"body":"\n# Computer Science Library\n\nThis is a collection of notes ranging from data structures and problems to specific knowledge of a programming language. It is a stored knowledge of different programming languages and applications for easy retrieval and note keeping.\n\nThis repository will be continually updated and maintained as knowledge base grows and aspects of languages are updated.\n\n![](/assets/images/2022-01-02-23-34-36.png)\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":4,"useFMTitle":true,"useNoteTitleForLink":true,"mermaid":true,"useKatex":true,"dev":{"enablePreviewV2":true},"site":{"assetsPrefix":"/Dendron","siteUrl":"https://nahombefekadu.github.io","copyAssets":true,"siteHierarchies":["root"],"siteRootDir":"docs","usePrettyRefs":true,"title":"Dendron","description":"Personal knowledge space","siteLastModified":true,"gh_edit_branch":"main","duplicateNoteBehavior":{"action":"useVault","payload":["vault"]},"usePrettyLinks":true,"siteNotesDir":"notes","siteFaviconPath":"favicon.ico","gh_edit_link":true,"gh_edit_link_text":"Edit this page on GitHub","gh_root":"docs/","gh_edit_view_mode":"edit","writeStubs":true,"siteIndex":"root"},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{}},"workspace":{"vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link"},"graph":{"zoomSpeed":1},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false}}},"__N_SSG":true}